name: CI Smoke + Deploy to Render

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: render-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: eqabo_hotel_booking
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: eqabo_hotel_booking
      DB_SSL: "false"
      PGSSLMODE: disable
      NODE_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install prerequisites (PowerShell + Postgres client)
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common gnupg
          wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U postgres; then
              echo "Postgres is ready"; break; fi; sleep 2; done

      - name: Run migrations
        run: npm run migration:run

      - name: Seed database (JS)
        run: npm run seed

      - name: Install Newman CLI
        run: npm i -g newman

      - name: Run smoke tests
        run: npm run test:smoke

      - name: Trigger Render deploy
        if: ${{ success() }}
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "RENDER_DEPLOY_HOOK not set; skipping deploy";
            exit 0;
          fi
          curl -fsSL -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"